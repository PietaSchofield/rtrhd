% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ingest_define.R
\name{ingest_zips_to_duckdb}
\alias{ingest_zips_to_duckdb}
\title{Ingest a directory of ZIPs into DuckDB (low-memory, one ZIP at a time)}
\usage{
ingest_zips_to_duckdb(dbfile, zip_dir, zip_glob = "*.zip")
}
\arguments{
\item{dbfile}{Character scalar. Path to the DuckDB database file to create/use.}

\item{zip_dir}{Character scalar. Directory containing \code{.zip} files to ingest.}

\item{zip_glob}{Character scalar. Glob pattern for ZIP names within \code{zip_dir}.
Default: \code{"*.zip"}.}
}
\value{
Invisibly returns \code{TRUE}. Prints a short per-table row-count summary.
}
\description{
Extracts each \code{.zip} to a temp folder, loads all tab-delimited \code{.txt} files
into a DuckDB database, then deletes the temp files. Tables are created or
appended based on the base \code{.txt} filename. Two special rules are baked in:
\code{include_Define_results.txt} → table \code{Patients}, and any \code{include_Define_log.txt}
is skipped. New columns found in later files are added to existing tables as
\code{TEXT} to avoid schema drift failures.
}
\details{
\strong{Workflow}
\enumerate{
\item Find ZIPs by \code{zip_glob} under \code{zip_dir}.
\item For each ZIP: extract to a temporary directory, read every \verb{*.txt} as TSV with
all columns as character, write/append into DuckDB, then remove the temp dir.
\item Table naming: base of the \code{.txt} after removing the \verb{Inc[0-9]_} prefix and any
trailing \verb{_[0-9]+} or spaces; lowercased and non-alphanumerics converted to \verb{_}.
}

\strong{Routing rules}
\itemize{
\item Files named exactly \code{include_Define_results.txt} → table \code{Patients}.
\item Files named exactly \code{include_Define_log.txt} are ignored.
}

\strong{Schema evolution}
\itemize{
\item If a later file has extra columns, they are added to the DuckDB table as \code{TEXT}.
\item Missing columns in an incoming file are filled with \code{NA_character_}.
}

\strong{Performance notes}
\itemize{
\item Processes one ZIP at a time to keep RAM and disk I/O low.
\item Reads with \code{colClasses = "character"} to avoid expensive type inference and
heterogeneity across files.
}
}
\examples{
\dontrun{
ingest_zips_to_duckdb(
  dbfile  = "data.duckdb",
  zip_dir = file.path(.locData, "define")
)
}

}
